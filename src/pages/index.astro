---
import '../styles/index.css';


import { Image } from 'astro:assets';
import { getCollection, getEntry, render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';
import Card from '../components/Card.astro';
import Icon from '../components/Icon.astro';
import Layout from '../layouts/Layout.astro';

const [posts, projects, about, workExperience, education, quickInfo, socials] =
    await Promise.all([
        getCollection("posts", (post) => post.data.draft !== true),
        getCollection("projects"),
        getEntry("other", "about"),
        getCollection("workExperience"),
        getCollection("education"),
        getCollection("quickInfo"),
        getCollection("socials")
    ]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
---
<Layout
    title={openGraph.home.title || name}
    description={openGraph.home.description}
>
    <div class="center-container" slot="center">
        <div class="section-container">
            <h1>Hi there! I'm<br><span class="text-glow">Kim Pham</span></h1>
            <p style="font-size: 1.25em; margin-bottom: 2rem;">
                I'm a <span class="text-glow">frontend software engineer</span> from Melbourne, Australia.<br/>
                I love building delightful user experiences with design and code.
            </p>
            <div class="socials-list" style="">
                {
                    socials.map((item) => (
                        <a href={item.data.link} style="text-decoration: none;">
                            <div class="socials-link">
                                <Icon
                                    type={item.data.icon.type}
                                    name={item.data.icon.name as any}
                                    width={24}
                                    height={24}
                                    class="glow-icon"
                                />
                                <span>{item.data.text}</span>
                            </div>
                        </a>
                    ))
                }
            </div>
        </div>
        <div class="section-container">
                <div class="header-container">
                    <Icon
                        type="lucide"
                        name="briefcase-business"
                        width={24}
                        height={24}
                        class="glow-icon"
                    />
                    <h2>Work Experience</h2>
                    <a href={`/work`}>See more </a>
                </div>
            <Card class="hover-effect">
                {
                    workExperience.reverse().map((entry) => (
                    <a href={'/work'} style="text-decoration: none; color: inherit;">
                        <div class="card-entry">
                            <div class="work-experience-header">
                                <Image
                                    quality={100}
                                    width={80}
                                    height={80}
                                    src={entry.data.image}
                                    alt={`${entry.data.company} logo`}
                                    loading="eager"
                                />
                                <div>
                                    <span class="card-date">
                                        {entry.data.duration}
                                    </span>
                                    <h3 class="card-title">
                                        {entry.data.company}
                                    </h3>
                                    <span class="card-subtitle">
                                        {entry.data.title}
                                    </span>
                                </div>
                            </div>
                            
                            <p class="work-experience-desc">
                                {entry.data.description}
                            </p>
                        </div>
                    </a>
                    ))
                }
            </Card>
        </div>
        <div class="section-container">
            <div class="header-container">
                <Icon
                    type="lucide"
                    name="graduation-cap"
                    width={24}
                    height={24}
                    class="glow-icon"
                />
                <h2>Education</h2>
            </div>
            <div class="education-cards">
                {
                    education.reverse().map((entry) => (
                    <Card class="flip-card">
                        <div class="flip-card-inner">
                            <a href="#!" id="flip-card-inner">
                                <div class="flip-card-front">
                                    <div class="education-header">
                                <Image
                                    quality={100}
                                    width={150}
                                    height={150}
                                    src={entry.data.image}
                                    alt={entry.data.image}
                                    loading="eager"
                                />
                                <div>
                                    <span class="card-date">
                                        {entry.data.duration}
                                    </span>
                                    <h3 class="card-title">
                                        {entry.data.title}
                                    </h3>
                                    <span class="card-subtitle">
                                        {entry.data.company === 'Monash University' ? entry.data.company : ''}
                                    </span>
                                </div>
                            </div>
                                </div>
                            </a>
                            <div class="flip-card-back">
                                <div set:html={entry.data.description} class="education-descad"/>
                            </div>
                        </div>
                    </Card>
                    <div><button onclick="Event => testFunction(event)" class="my-button" my-button>test</button></div>
                    // <Card class="education-card">
                    //     <div class="card-entry">
                    //         <div class="education-header">
                    //             <Image
                    //                 quality={100}
                    //                 width={150}
                    //                 height={150}
                    //                 src={entry.data.image}
                    //                 alt={entry.data.image}
                    //                 loading="eager"
                    //             />
                    //             <div>
                    //                 <span class="card-date">
                    //                     {entry.data.duration}
                    //                 </span>
                    //                 <h3 class="card-title">
                    //                     {entry.data.title}
                    //                 </h3>
                    //                 <span class="card-subtitle">
                    //                     {entry.data.company === 'Monash University' ? entry.data.company : ''}
                    //                 </span>
                    //             </div>
                    //         </div>
                    //         <div set:html={entry.data.description} class="education-desc"/>
                    //     </div>
                    // </Card>
//                     <div id="show_hide">
// ok
// </div>
//                     <input type="text" 
//     onfocus="document.getElementById('show_hide').style.display='block';"
//     onblur="document.getElementById('show_hide').style.display='none';"/>
                    ))
                }
                
            </div>
        </div>
        <!-- <div class="header-container">
            <Icon
                type="lucide"
                name="briefcase-business"
                width={24}
                height={24}
                class="glow-icon"
            />
            <h2>Projects</h2>
            <a href={`/work`}>See more </a>
        </div>
        <div class="header-container">
            <Icon
                type="lucide"
                name="briefcase-business"
                width={24}
                height={24}
                class="glow-icon"
            />
            <h2>Contact me!</h2>
            <a href={`/work`}>See more </a>
        </div> -->
    </div>

    <!-- <div class="layout-grid-left" slot="left">
        <Card class="flex-col-card">
            <ImageGlow
                quality={100}
                width={80}
                height={80}
                src={ProfilePicture}
                alt="Louis looking out of a window"
                loading="eager"
            />
            <h2>{name}</h2>
            <ul class="overview-list">
                {
                    quickInfo.map((info) => (
                        <li>
                            <Icon
                                type={info.data.icon.type}
                                name={info.data.icon.name as any}
                                width={24}
                                height={24}
                                class="glow-icon"
                            />
                            <span>{info.data.text}</span>
                        </li>
                    ))
                }
            </ul>
        </Card>
        <Card>
            <h3 class="no-mt">Socials</h3>
            <ul class="overview-list">
                {
                    socials.map((item) => (
                        <li>
                            <a href={item.data.link} class="socials-link">
                                <Icon
                                    type={item.data.icon.type}
                                    name={item.data.icon.name as any}
                                    width={24}
                                    height={24}
                                    class="glow-icon"
                                />
                                <span>{item.data.text}</span>
                            </a>
                        </li>
                    ))
                }
            </ul>
        </Card>
    </div>
    <div class="layout-grid-right" slot="right">
        <Card>
            <div class="header-container">
                <Icon
                    type="lucide"
                    name="user"
                    width={24}
                    height={24}
                    class="glow-icon"
                />
                <h2>About me</h2>
            </div>
            <div class="prose">
                <About />
            </div>
        </Card>
        <Card>
            <div class="header-container">
                <Icon
                    type="lucide"
                    name="rss"
                    width={24}
                    height={24}
                    class="glow-icon"
                />
                <h2>Latest Posts</h2>
                <a href={`/blog`}>See all </a>
            </div>
            <div class="content-container">
                {
                    posts
                        .sort(
                            (a, b) =>
                                b.data.createdAt.getTime() -
                                a.data.createdAt.getTime()
                        )
                        .slice(0, 2)
                        .map((post) => (
                            <a href={`/blog/${post.id}`} class="post-container">
                                <div class="post-header">
                                    <h3>{post.data.title}</h3>
                                    <span class="post-date">
                                        {post.data.createdAt.toLocaleDateString()}
                                    </span>
                                </div>
                                <span>{post.data.description}</span>
                            </a>
                        ))
                }
            </div>
        </Card>
        <Card>
            <div class="header-container">
                <Icon
                    type="lucide"
                    name="folder-git"
                    width={24}
                    height={24}
                    class="glow-icon"
                />
                <h2>Latest Projects</h2>
                <a href={`/projects`}>See all </a>
            </div>
            <div class="content-container">
                {
                    projects
                        .sort(
                            (a, b) =>
                                b.data.date.getTime() - a.data.date.getTime()
                        )
                        .slice(0, 2)
                        .map((project) => (
                            <a
                                href={`/projects/${project.id}`}
                                class="post-container"
                            >
                                <div class="post-header">
                                    <h3>{project.data.title}</h3>
                                    <span class="post-date">
                                        {project.data.date.toLocaleDateString()}
                                    </span>
                                </div>
                                <span>{project.data.description}</span>
                            </a>
                        ))
                }
            </div>
        </Card>
        <Card>
            <div class="header-container">
                <Icon
                    type="lucide"
                    name="briefcase-business"
                    width={24}
                    height={24}
                    class="glow-icon"
                />
                <h2>Work Experience</h2>
                <a href={`/work`}>See more </a>
            </div>
            <div class="work-experience-container">
                {
                    quickWorkExperience.reverse().map((entry) => (
                        <div class="card-entry">
                            <span class="card-date">
                                {entry.data.duration}
                            </span>
                            <h3 class="card-title">
                                {entry.data.company}
                            </h3>
                            <span class="card-subtitle">
                                {entry.data.title}
                            </span>
                            <p class="work-experience-desc">
                                {entry.data.description}
                            </p>
                        </div>
                    ))
                }
            </div>
        </Card>
    </div> -->
</Layout>
<script>
    const testFunction = (event) =>{
      const currentElement = event.currentTarget; // The button element
      console.log("Clicked element:", currentElement);
  
      // Example: get text content
      console.log("Button text:", currentElement.textContent);
    }

    const tgt = document.querySelector("#test");
    tgt.addEventListener("click", () => {
        console.log("Hello, on client");
    });

    // document.addEventListener("DOMContentLoaded", () => {
    const buttons = document.querySelectorAll("[my-button]");

    buttons.forEach((btn) => {
      btn.addEventListener("click", (event) => {
        // const currentButton = event.currentTarget;
        console.log("Clicked button:");
      });
    });
//   });
</script>
<style>
    .center-container {
        display: flex;
        flex-direction: column;
    }

    .center-container h1 {
        font-size: 1.5em;
    }

    h1 .text-glow {
        font-size: 3rem;
    }

    .socials-list {
        display: flex;
        flex-direction: row;
        gap: 1rem;
    }

    .socials-link {
        padding: 0.5rem 1.5rem;
        border-radius: 1rem;
        border: 1px solid var(--dark-grey);
        background: var(--darkest-purple);
        text-decoration: none;
    }

    .socials-link,
    .hover-effect {
        transition:
            background-color 0.15s ease,
            border 0.15s ease;
    }

    .socials-link:hover,
    .socials-link:focus-visible {
        background-color: #1F2434;
        border: 1px solid var(--primary);
    }

    .hover-effect:hover,
    .hover-effect:focus-visible {
        background-color: #181A28;
        border: 1px solid var(--primary);
    }

    .socials-link:focus-visible {
        outline: none;
    }

    .header-container {
        align-items: baseline;
        justify-items: center;
    }

    .section-container {
        margin-bottom: 3rem;
        /* background-color: var(--dark-purple); */
    }

    .education-header {
        align-items: center;
        justify-items: center;
        gap: 1rem;
    }

    .education-cards {
        display: flex;
        flex-direction: row;
        gap: 1rem;
    }

    .education-card, .education-desc {
        background-color: var(--darker-purple);
    }

    .education-card {
        position: relative;
    }
    
    .education-desc {
        opacity: 0;
        position: absolute;
        top: 0;
        left:0;
        margin: 30px;
        height: 100%;
        transition:
            opacity 0.3s ease
    }
    
    .education-desc:hover, .{
        opacity: 100;
    }

    /* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */

.flip-card {
  background-color: transparent;
  /* width: 300px; */
  height: 450px;
  // border: 1px solid #f1f1f1;
  /* // perspective: 1000px; Remove this if you don't want the 3D effect */
}


/* This container is needed to position the front and back side */

.flip-card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

.flip-card-inner a {
    color: var(--white);
}


/* Do an horizontal flip when you move the mouse over the flip box container */

.flip-card:hover .flip-card-inner,
.flip-card:focus-within .flip-card-inner,
.flip-card:active .flip-card-inner,
.flip-card:focus .flip-card-inner {
  transform: rotateY(180deg);
  
}


/* Position the front and back side */

.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden;
  /* Safari */
  backface-visibility: hidden;
}


/* Style the front side (fallback if image is missing) */

.flip-card-front {
  background-color: var(--darkest-purple);
}


/* Style the back side */

.flip-card-back {
  background-color: var(--darkest-purple);
  transform: rotateY(180deg);
}

#show_hide{
    display: none;
}
    @media screen and (max-width: 640px) {
        .center-container {
            margin: 0 1rem;
            gap: 1rem;
        }

        .socials-list, .education-cards {
            flex-direction: column;
        }

        .socials-link {
            justify-content: center;
        }
    
</style>
